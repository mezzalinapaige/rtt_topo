library(phangorn)
library(NELSI)
library(gtools)
library(stringr)

load("updated.all.trees.Rdata")
references <- read.csv("references.csv")

#Change class of tree list to multiphylo, write gene trees to file by study, then pull from directory for Astral

for (i in 1:length(maximalTrsOrd2)) {
  class(maximalTrsOrd2[[i]]) <- "multiPhylo" 
  write.tree(maximalTrsOrd2[[i]], paste0(file = "s",i,".trs"))
}
tree_dir <- getwd() 
gene_files <- dir(tree_dir, pattern= ".trs") 
gene_files <- mixedsort(sort(gene_files))


#Estimate species trees via Astral

for (i in 1:length(gene_files)) {
  system(paste0("java -jar astral.5.7.3.jar -i s",i,".trs -o s",i,"_species.tre"))
}


#Pull species tree files 

species_files <- dir(tree_dir, pattern= "species.tre")
species_files <- mixedsort(sort(species_files)) #Sort numerically, not alphabetically
species_files <- lapply(species_files, read.tree) #Read in as tree for RF.dist


#Calculate topological variables and species distance

get_metrics <- function(tre, species_tr, study_num, study_name) {
  snum <- study_num
  sname <- study_name
  tbl <- sum(tre$edge.length)
  mbl <- mean(tre$edge.length)
  coeffVar_bl <- sd(tre$edge.length)/mean(tre$edge.length)
  stemminess <- sum(tre$edge.length[which(tre$edge[,2] > Ntip(tre))], na.rm = T) / sum(tre$edge.length, na.rm = T)
  species_distance <- RF.dist(species_tr, tre, check.labels = TRUE, normalize = TRUE)
  rootTip_lengths <- pathnode(midpoint(tre))
  coeffVar_rtl <- sd(rootTip_lengths$roottotippath)/mean(rootTip_lengths$roottotippath)
  class(tre$node.label) <- "numeric"
  mean_branchSup <- mean(tre$node.label, na.rm = TRUE)
  numberBranches <- Nedge(tre)
  numberTaxa <- Ntip(tre)
  return(c(snum, sname, tbl, mbl, coeffVar_bl, stemminess, coeffVar_rtl, mean_branchSup, numberBranches, numberTaxa, species_distance))
}

topologicalMetrics <- list()
for (i in 1:34) {
  metrics <- lapply(maximalTrsOrd2[[i]], get_metrics, species_tr = species_files[[i]], study = study_numberOrd[[i]], study_name = references[[i]])
  topologicalMetrics <- c(topologicalMetrics, metrics)
}
topologicalMetrics_df <- as.data.frame(do.call(rbind, lapply(topologicalMetrics, `length<-`, max(lengths(topologicalMetrics)))))
colnames(topologicalMetrics_df) <- c("Study.Number", "Reference", "Total.Branch.Lengths", "Mean.Branch.Lengths", "CoV.Branch.Lengths", "Stemminess", "CoV.RootTotip.Lengths", "Mean.Branch.Support", "Number.of.Branches", "Number.of.Taxa", "Species.Distance")
data_df <- topologicalMetrics_df


#Calculate gene distances and add to data_df

get_GDmatrix <- function(studyTrees) {
  pwd = path.dist(studyTrees)
  pwdMatrix <- as.matrix(pwd)
  return(pwdMatrix)
}
GDmatrix <- lapply(maximalTrsOrd2, get_GDmatrix) #returns matrix of gene tree pair-wise distances

get_GDmeans <- function(pwdMatrix) {
  diag(pwdMatrix) <- NA
  pwdMeans <- colMeans(pwdMatrix, na.rm = TRUE)
  return(pwdMeans)
}
GDMeans <- lapply(GDmatrix, get_GDmeans) #Returns list of the mean distance between genes 

data_df$Gene.Distance=unlist(GDMeans)
write.csv(data_df, file = "data_df.csv")
