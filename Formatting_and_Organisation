library(rlist)
library(ape)

setwd("/Users/mezzalinavankan/Documents/Mini")

#Order studies by number of loci and remove study 2 

trsize <- sapply(maximalTrs, length) #order of trees by number of loci
trsize <- mixedorder(order(trsize)) #reorder list from smallest to largest number of loci
maximalTrsOrd <- maximalTrs[order(trsize)] #reorder the list of trees to be that of above
maximalTrsOrd2 <- maximalTrsOrd[-1] #remove study 1 
trsize <- trsize[-1] #remove study 1 from trsize list for later
save(maximalTrsOrd2, file = "updated.all.trees.Rdata")



#Put references into correct format

studies <- read.csv("studies_included.csv")
studies <- as.data.frame(studies)
studyRefs <- studies[,1]
get_reference <- function(referenceList) {
  author <- str_extract(referenceList, "(\\w+)") #the first word
  year <- str_extract(referenceList, "(\\d+)") #the first digit
  fullAuthorship <- str_extract(studyRefs[1], "(^\\D+)") 
  reference <- paste(author, "et al,", year)
}
references <- lapply(studyRefs[-1], get_reference)
save(references, file = "Raw_Data/references.Rdata")
study_numberOrd <- 1:34


#Create table of coe summaries for export
#takes the original glm files, not the dfs.

extract_coeSummary <- function(glms) {
  rbind(summary(glms)$coe)
}

allstuds_reformat <- function(glm, colname) {
  allstuds_summary <- extract_coeSummary(glm)
  allstuds_summary <- data.frame(allstuds_summary) 
  allstuds_summary <- rownames_to_column(allstuds_summary) #Change rownames to column to allow reference to be added to df
  fakeCol <- rep(NA, each = 5)
  allstuds_summary <- cbind(allstuds_summary, fakeCol) #Add fake column so the df is the exact same width as the individual studies summary table
  colnames(allstuds_summary) <- c(colname, "Estimate", "Standard Error", "t-statistic", "NA") #Rename columns to add reference and NA for fake column
  return(allstuds_summary)
}

create_summarydf <- function(glmNW, glmBW, glmTW, glms, reference, filename) {
  
  #Get coefficient summaries for all studies and reformat 
  allstuds_summaryNW <- allstuds_reformat(glmNW, 'All Studies, No Weights')
  allstuds_summaryBW <- allstuds_reformat(glmBW, 'All Studies, Branch Weights')
  allstuds_summaryTW <- allstuds_reformat(glmTW, 'All Studies, Taxa Weights')
  
  #Get coefficient summaries for individual studies and reformat
  indvstuds_summary <- lapply(glms, extract_coeSummary) #Get summaries for indv studies
  indvstuds_summaryList <- list()
  for (i in 1:34) {
    indvdf <- data.frame(indvstuds_summary[[i]])
    indvdf <- rownames_to_column(indvdf)
    colnames(indvdf) <- c(reference[[i]], "Estimate", "Standard Error", "t-statistic", "P value")
    indvstuds_summaryList <- list.append(indvstuds_summaryList, indvdf) #rlist package
  }
  
  #Add all studies and individual study lists together and export as csv
  indvstuds_summaryList <- list.append(indvstuds_summaryList, allstuds_summaryNW)
  indvstuds_summaryList <- list.append(indvstuds_summaryList, allstuds_summaryBW)
  indvstuds_summaryList <- list.append(indvstuds_summaryList, allstuds_summaryTW)
  summaryList <- indvstuds_summaryList
  lapply(summaryList, function(x) write.table( data.frame(x), filename, append= T, sep=',', row.names = TRUE, col.names = TRUE, quote = TRUE))
  return(summaryList)
}

geneDistance_coeSummaries <- create_summarydf(GDglmLer, GDglmLerB, GDglmLerT, indvGDglms, references, 'geneDistance_summaries.csv')
speciesDistance_coeSummaries <- create_summarydf(SDglmer, SDglmerB, SDglmerT, indvSDglms, references, 'speciesDistance_summaries.csv')
